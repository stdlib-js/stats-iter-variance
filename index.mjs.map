{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar incrvariance = require( '@stdlib/stats-incr-variance' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// MAIN //\n\n/**\n* Computes the unbiased sample variance over all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @param {number} [mean] - mean value\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a number\n* @returns {(number|null)} unbiased sample variance\n*\n* @example\n* var runif = require( '@stdlib/random-iter-uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var s2 = itervariance( rand );\n* // returns <number>\n*/\nfunction itervariance( iterator, mean ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( '0ff48', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( mean ) ) {\n\t\t\tthrow new TypeError( format( '0ff4N', mean ) );\n\t\t}\n\t\tacc = incrvariance( mean );\n\t} else {\n\t\tacc = incrvariance();\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else {\n\t\t\tacc( NaN );\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itervariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the unbiased sample variance over all iterated values.\n*\n* @module @stdlib/stats-iter-variance\n*\n* @example\n* var runif = require( '@stdlib/random-iter-uniform' );\n* var itervariance = require( '@stdlib/stats-iter-variance' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var s2 = itervariance( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["isIteratorLike","require$$0","isNumber","require$$1","isPrimitive","incrvariance","require$$2","format","require$$3","lib","iterator","mean","acc","v","TypeError","arguments","length","next","done","value","NaN"],"mappings":";;gWAsBA,IAAIA,EAAiBC,EACjBC,EAAWC,EAAsCC,YACjDC,EAAeC,EACfC,EAASC,EAuDb,ICpCAC,EDKA,SAAuBC,EAAUC,GAChC,IAAIC,EACAC,EACJ,IAAMb,EAAgBU,GACrB,MAAM,IAAII,UAAWP,EAAQ,QAASG,IAEvC,GAAKK,UAAUC,OAAS,EAAI,CAC3B,IAAMd,EAAUS,GACf,MAAM,IAAIG,UAAWP,EAAQ,QAASI,IAEvCC,EAAMP,EAAcM,QAEpBC,EAAMP,IAEP,OACCQ,EAAIH,EAASO,QACNC,MAGiB,iBAAZL,EAAEM,MACbP,EAAKC,EAAEM,OAEPP,EAAKQ,KAGP,OAAOR"}